# -*- mode: ruby -*-
# vi: set ft=ruby :

# Creates a Virtual machine which can be used to install nVidia's jetpack on

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = "ubuntu/trusty64"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
      # Don't boot with headless mode
      #   vb.gui = true
      #
      #   # Use VBoxManage to customize the VM. For example to change memory:
      vb.customize ["modifyvm", :id, "--memory", "2048"]
      vb.customize ["modifyvm", :id, "--ioapic", "on"]
      vb.customize ["modifyvm", :id, "--cpus", "2"]
      # Make some effort to avoid clock skew
      vb.customize ["guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold", "5000"]
      vb.customize ["guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-start"]
      vb.customize ["guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-on-restore", "1"]
      vb.customize ["modifyvm", :id, "--usb", "on"]
      vb.customize ["usbfilter", "add", "0", 
                    "--target", :id, 
                    "--name", "nvidiatx1",
                    "--productid", "7721",
                    "--vendorid", "0955",
                   ]
  end

  config.vm.network "public_network"

  # The created VM sets PX4_WINTOOL=y to allow builds to proceed using shared folders with using symlinks.
  # However shared folders are quite slow. If you have rsync installed then this is a faster way of building.
  # In addition there are problems with px4-clean when using shared folders. Using rsync avoids this.
  # config.vm.synced_folder ".", "/vagrant", type: "rsync", rsync__auto: true
  
   config.vm.provision :"shell", inline: <<-SHELL
        echo "[Jetson-TX1]: Starting install"
        sudo apt-get update
	sudo apt-get install -y libgtk2.0 xterm
	mkdir JetPack
 	pushd JetPack
        test -d /vagrant/jetpack_download || mkdir /vagrant/jetpack_download
        test -e /vagrant/jetpack_download/jetpack_download || ln -s  /vagrant/jetpack_download /vagrant/jetpack_download/jetpack_download
        ln -s /vagrant/jetpack_download
	popd
    SHELL
end

#        sh /vagrant/JetPack-L4T-2.3.1-linux-x64.run
